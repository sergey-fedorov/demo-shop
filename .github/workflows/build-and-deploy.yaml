name: Build and Deploy

on:
  push:
    branches: master

jobs:

  code_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Unit test code coverage
        run: mvn jacoco:check@jacoco-check

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Execute unit tests
        run: mvn '-Dtest=com.demo.shop.tests.unit.*Tests' test
      - name: Execute component tests
        run: mvn '-Dtest=com.demo.shop.tests.component.*Tests' test
      - name: Execute integration tests
        run: mvn '-Dtest=com.demo.shop.tests.integration.*Tests' test
      - name: Execute consumer contract tests
        run: mvn '-Dtest=com.demo.shop.tests.contract.consumer.*Test' test -DparallelTests=false
      - name: Execute provider contract tests
        run: mvn '-Dtest=com.demo.shop.tests.contract.provider.*Test' test -DparallelTests=false

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build project
        run: mvn clean install -DskipTests

      - name: Login to docker hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Build docker image
        run: docker build -t sergfedorov/demo-shop .
      - name: Publish image to docker hub
        run: docker push sergfedorov/demo-shop:latest

      - name: Check if docker-compose.yaml updated
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            docker-compose:
              - 'docker-compose.yaml'
      - name: Copy docker-compose.yaml to server
        if: steps.changes.outputs.docker-compose == 'true'
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 3.76.39.201
          username: ${{ secrets.EC2_SSH_USER }}
          password: ${{ secrets.EC2_SSH_PASSWORD }}
          port: 22
          source: docker-compose.yaml
          target: /home/ubuntu

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub and restart docker
        run: sudo docker compose pull && sudo docker compose up -d

  e2e_test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Execute E2E tests
        run: mvn '-Dtest=com.demo.shop.tests.e2e.*Tests' test -P remote -P allureReport

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Send results to Zephyr cycle
        run: ./zephyr-sync.sh DS ${{ secrets.ZEPHYR_TOKEN }}